name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Deploy target environment"
        required: false
        default: "preview"

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production
      NITRO_PRESET: cloudflare-pages
      NODE_OPTIONS: "--max_old_space_size=4096"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: npm

      - name: Clean up existing files
        run: rm -rf node_modules package-lock.json .nuxt .output dist || true

      - name: Create Tailwind config if missing
        run: |
          if [ ! -f "tailwind.config.js" ]; then
            echo "Creating tailwind.config.js..."
            echo "/** @type {import('tailwindcss').Config} */" > tailwind.config.js
            echo "module.exports = {" >> tailwind.config.js
            echo "  content: [" >> tailwind.config.js
            echo "    \"./components/**/*.{js,vue,ts}\"," >> tailwind.config.js
            echo "    \"./layouts/**/*.vue\"," >> tailwind.config.js
            echo "    \"./pages/**/*.vue\"," >> tailwind.config.js
            echo "    \"./plugins/**/*.{js,ts}\"," >> tailwind.config.js
            echo "    \"./app.vue\"," >> tailwind.config.js
            echo "    \"./nuxt.config.{js,ts}\"," >> tailwind.config.js
            echo "  ]," >> tailwind.config.js
            echo "  theme: {" >> tailwind.config.js
            echo "    extend: {}," >> tailwind.config.js
            echo "  }," >> tailwind.config.js
            echo "  plugins: []," >> tailwind.config.js
            echo "}" >> tailwind.config.js
          fi

      - name: Patch package.json dependencies
        run: |
          echo "// Patch script" > package-fix.js
          echo "const fs = require('fs');" >> package-fix.js
          echo "const pkg = JSON.parse(fs.readFileSync('./package.json', 'utf8'));" >> package-fix.js
          echo "pkg.devDependencies = pkg.devDependencies || {};" >> package-fix.js
          echo "pkg.devDependencies['tailwindcss'] = '^3.4.0';" >> package-fix.js
          echo "pkg.devDependencies['@nuxtjs/tailwindcss'] = '^6.10.3';" >> package-fix.js
          echo "pkg.devDependencies['postcss'] = '^8.4.33';" >> package-fix.js
          echo "pkg.devDependencies['autoprefixer'] = '^10.4.17';" >> package-fix.js
          echo "pkg.devDependencies['vitest'] = '^1.1.0';" >> package-fix.js
          echo "pkg.devDependencies['@vitejs/plugin-vue'] = '^5.0.0';" >> package-fix.js
          echo "pkg.devDependencies['@vitest/ui'] = '^1.1.0';" >> package-fix.js
          echo "pkg.scripts = pkg.scripts || {};" >> package-fix.js
          echo "pkg.scripts.build = 'nuxt build';" >> package-fix.js
          echo "pkg.scripts.test = 'vitest';" >> package-fix.js
          echo "pkg.scripts['test:ui'] = 'vitest --ui';" >> package-fix.js
          echo "fs.writeFileSync('./package.json', JSON.stringify(pkg, null, 2));" >> package-fix.js
          node package-fix.js
          rm package-fix.js

      - name: Create PostCSS config
        run: |
          if [ ! -f "postcss.config.js" ]; then
            echo "module.exports = { plugins: { tailwindcss: {}, autoprefixer: {} } }" > postcss.config.js
          fi

      - name: Create Vitest config
        run: |
          if [ ! -f "vitest.config.ts" ]; then
            echo "import { defineConfig } from 'vitest/config'" > vitest.config.ts
            echo "import vue from '@vitejs/plugin-vue'" >> vitest.config.ts
            echo "" >> vitest.config.ts
            echo "export default defineConfig({" >> vitest.config.ts
            echo "  plugins: [vue()]," >> vitest.config.ts
            echo "  test: {" >> vitest.config.ts
            echo "    environment: 'jsdom'," >> vitest.config.ts
            echo "    include: ['**/*.{test,spec}.{js,ts,jsx,tsx}']," >> vitest.config.ts
            echo "    exclude: ['node_modules', 'dist', '.nuxt', '.output']" >> vitest.config.ts
            echo "  }" >> vitest.config.ts
            echo "})" >> vitest.config.ts
          fi

      - name: Install dependencies
        run: npm install

      - name: Nuxt prepare step
        run: npx nuxt prepare

      - name: Build Nuxt project
        run: npm run build

      - name: Upload to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: .output/public
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          wranglerVersion: 3
