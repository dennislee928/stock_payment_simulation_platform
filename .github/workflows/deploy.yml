name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "部署環境"
        required: false
        default: "preview"

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production
      NITRO_PRESET: cloudflare-pages
      NODE_OPTIONS: --max_old_space_size=4096

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Clean Previous Installations
        run: rm -rf node_modules package-lock.json .nuxt .output dist

      - name: Fix and Update Dependencies
        run: |
          node << EOF
          const fs = require('fs');

          const packageJson = JSON.parse(fs.readFileSync('./package.json', 'utf8'));
          const devDeps = {
            "@nuxtjs/tailwindcss": "^6.10.3",
            "tailwindcss": "^3.4.0",
            "postcss": "^8.4.33",
            "autoprefixer": "^10.4.17",
            "@rollup/wasm-node": "^4.13.0",
            "vitest": "^1.1.0",
            "@vitejs/plugin-vue": "^5.0.0",
            "@vitest/ui": "^1.1.0",
            "sass-embedded": "^1.69.5"
          };

          packageJson.devDependencies = { ...packageJson.devDependencies, ...devDeps };

          packageJson.resolutions = {
            ...packageJson.resolutions,
            "rollup": "npm:@rollup/wasm-node"
          };

          packageJson.overrides = {
            ...packageJson.overrides,
            "rollup": "npm:@rollup/wasm-node"
          };

          packageJson.scripts.build = "nuxt build";
          packageJson.scripts.postinstall = "nuxt prepare";
          packageJson.scripts.test = "vitest";
          packageJson.scripts["test:ui"] = "vitest --ui";

          delete packageJson.scripts.preinstall;

          fs.writeFileSync('./package.json', JSON.stringify(packageJson, null, 2));
          EOF

          # 明確告知 npm 需要重新安裝相依性
          npm install

      - name: Generate Configuration Files
        run: |
          if [ ! -f "tailwind.config.js" ]; then
            cat <<EOT > tailwind.config.js
          module.exports = {
            content: [
              "./components/**/*.{js,vue,ts}",
              "./layouts/**/*.vue",
              "./pages/**/*.vue",
              "./plugins/**/*.{js,ts}",
              "./app.vue",
              "./nuxt.config.{js,ts}",
            ],
            theme: { extend: {} },
            plugins: [],
          }
          EOT
          fi

          if [ ! -f "postcss.config.js" ]; then
            echo "module.exports = { plugins: { tailwindcss: {}, autoprefixer: {} } };" > postcss.config.js
          fi

          if [ ! -f "vitest.config.ts" ]; then
            cat <<EOT > vitest.config.ts
          import { defineConfig } from 'vitest/config';
          import vue from '@vitejs/plugin-vue';

          export default defineConfig({
            plugins: [vue()],
            test: {
              environment: 'jsdom',
              include: ['**/*.{test,spec}.{js,ts,jsx,tsx}'],
              exclude: ['node_modules', 'dist', '.nuxt', '.output']
            }
          });
          EOT
          fi

      - name: Ensure sass-embedded is installed
        run: npm install -D sass-embedded

      - name: Build Nuxt Application
        run: npm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: .output/public
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main
